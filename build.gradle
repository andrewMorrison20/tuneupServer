plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'org.sonarqube' version '4.0.0.2929'
}

group = 'com.tuneup'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jacoco {
	toolVersion = "0.8.10"
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'**/mappers/**',
				"**/entities/**",
				"**/enums/**",
				"**/dtos/**",
				"**/model/**",
				"**/exceptions/**",
				"**/TuneupApplicationTests.class"
		])
	}))
	dependsOn test

	reports {
		xml.required.set(true)
		html.required.set(true)
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "andrewMorrison20_tuneupServer"
		property "sonar.organization", "andrewmorrison20"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework:spring-messaging'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:12.6.0.jre11'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.37.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'com.google.cloud:google-cloud-storage:2.46.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.jboss.logging:jboss-logging:3.5.3.Final'
	testImplementation 'com.h2database:h2:2.2.224'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	exclude '**/TuneupApplicationTests.class', 'com/tuneup/tuneup/TuneupApplicationTests.class'
	testLogging {
		events "started", "passed", "failed", "skipped"
		showStandardStreams = true
	}
}