name: Build Docker Image

on:
  workflow_call:
    inputs:
      registry:
        description: 'Docker Hub namespace'
        required: true
        type: string
      image_name:
        description: 'Name of the image'
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        description: 'Docker Hub username'
        required: true
      DOCKERHUB_TOKEN:
        description: 'Docker Hub access token'
        required: true

jobs:
  Build-Docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.build-and-push.outputs.IMAGE_TAG }}
      IMAGE_VERSION: ${{ steps.build-and-push.outputs.IMAGE_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ inputs.registry }}/${{ inputs.image_name }}:latest
            ${{ inputs.registry }}/${{ inputs.image_name }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:cache
          cache-to:   type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:cache,mode=max

      - name: Set outputs
        run: |
          echo "::set-output name=IMAGE_TAG::${{ inputs.registry }}/${{ inputs.image_name }}:${{ github.sha }}"
          echo "::set-output name=IMAGE_VERSION::${{ github.sha }}"
